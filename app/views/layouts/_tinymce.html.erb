<%= javascript_include_tag 'tinymce/tinymce.min' %>
<script>
tinymce.init({
  selector: "textarea.tinymce",
  toolbar: ["styleselect formatselect | bold italic forecolor backcolor | insert link image media table | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat | undo redo | homecard"],
  plugins: "homecard paste,print preview searchreplace autolink directionality visualblocks visualchars fullscreen image imagetools link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists textcolor wordcount contextmenu colorpicker textpattern",
  menubar: false,
  content_style: ".card { position: relative; box-shadow: 1px 1px 10px lightgrey; border-radius: 0 0 5px 5px; background-color: gray; } .card img { width: 300px; height: 300px; float: left; }",
  image_title: true,
  image_advtab: true,
  image_caption: true,
  automatic_uploads: false,
  images_upload_handler: function (blobInfo, success, failure) {
    var xhr, formData;
    xhr = new XMLHttpRequest();
    xhr.withCredentials = false;
    xhr.open('POST', '/tinyimgs');
    token = $('meta[name=csrf-token]').attr('content');
    xhr.setRequestHeader('X-CSRF-Token', token);
    console.log(blobInfo)
    xhr.onload = function() {
      var json;

      if (xhr.status != 200) {
        failure('HTTP Error: ' + xhr.status);
        return;
      }
      json = JSON.parse(xhr.responseText);

      if (!json || typeof json.location != 'string') {
        failure('Invalid JSON: ' + xhr.responseText);
        return;
      }
      success(json.location);
    };
    formData = new FormData();
    formData.append('file', blobInfo.blob(), blobInfo.filename());
    xhr.send(formData);
  }
});
</script>
